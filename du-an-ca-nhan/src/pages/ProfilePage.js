import React, { useEffect, useState } from 'react';
import {
    Avatar,
    Box,
    Card,
    CardContent,
    Divider,
    Typography,
    Grid,
    Paper
} from '@mui/material';
import { getUserByUsername } from '../services/userService';

const ProfilePage = () => {
    const [user, setUser] = useState(null);
    const [error, setError] = useState(null);
    const username = localStorage.getItem("username");

    useEffect(() => {
        const fetchUser = async () => {
            if (!username) {
                setError("Kh√¥ng t√¨m th·∫•y username trong localStorage.");
                return;
            }

            try {
                const res = await getUserByUsername(username);
                if (!res || res.error) {
                    setError("Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.");
                } else {
                    setUser(res);
                }
            } catch (err) {
                console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng:", err);
                setError("L·ªói m√°y ch·ªß ho·∫∑c k·∫øt n·ªëi khi l·∫•y th√¥ng tin.");
            }
        };

        fetchUser();
    }, [username]);

    const formatDate = (dateStr) => {
        try {
            return new Date(dateStr).toLocaleDateString('vi-VN');
        } catch {
            return "Kh√¥ng x√°c ƒë·ªãnh";
        }
    };

    const getGenderLabel = (gender) => {
        if (gender === true) return "Nam";
        if (gender === false) return "N·ªØ";
        return "Kh√¥ng r√µ";
    };

    const getRoleLabel = (roleId) => {
        switch (roleId) {
            case 1: return "Qu·∫£n tr·ªã vi√™n";
            case 2: return "Nh√¢n vi√™n";
            default: return "Ng∆∞·ªùi d√πng";
        }
    };

    if (error) {
        return <Typography align="center" mt={4} color="error">{error}</Typography>;
    }

    if (!user) {
        return <Typography align="center" mt={4}>ƒêang t·∫£i th√¥ng tin ng∆∞·ªùi d√πng...</Typography>;
    }

    return (
        <Box maxWidth={800} mx="auto" mt={5}>
            <Card elevation={5}>
                <CardContent>
                    <Box display="flex" flexDirection="column" alignItems="center" mb={3}>
                        <Avatar sx={{ width: 100, height: 100, mb: 1 }}>
                            {user.fullName?.charAt(0).toUpperCase() || "?"}
                        </Avatar>
                        <Typography variant="h5">{user.fullName}</Typography>
                        <Typography color="text.secondary">{getRoleLabel(user.roleId)}</Typography>
                    </Box>

                    <Divider sx={{ mb: 3 }} />

                    <Typography variant="h6" gutterBottom>üîé Th√¥ng tin c√° nh√¢n</Typography>
                    <Paper variant="outlined" sx={{ p: 2, mb: 3 }}>
                        <Grid container spacing={2}>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>T√†i kho·∫£n:</strong> {username}</Typography>
                            </Grid>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>Email:</strong> {user.email}</Typography>
                            </Grid>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>S·ªë ƒëi·ªán tho·∫°i:</strong> {user.phoneNumber}</Typography>
                            </Grid>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>Gi·ªõi t√≠nh:</strong> {getGenderLabel(user.gender)}</Typography>
                            </Grid>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>Ng√†y sinh:</strong> {user.birthDate ? formatDate(user.birthDate) : 'Ch∆∞a c·∫≠p nh·∫≠t'}</Typography>
                            </Grid>
                            <Grid item xs={12} md={6}>
                                <Typography><strong>ƒê·ªãa ch·ªâ:</strong> {user.address || 'Ch∆∞a c·∫≠p nh·∫≠t'}</Typography>
                            </Grid>
                        </Grid>
                    </Paper>

                    <Typography variant="h6" gutterBottom>‚öôÔ∏è Tr·∫°ng th√°i & h·ªá th·ªëng</Typography>
                    <Paper variant="outlined" sx={{ p: 2 }}>
                        <Typography><strong>Vai tr√≤ h·ªá th·ªëng:</strong> {getRoleLabel(user.roleId)}</Typography>
                        <Typography><strong>Tr·∫°ng th√°i:</strong> Ho·∫°t ƒë·ªông</Typography>
                        <Typography><strong>L·∫ßn truy c·∫≠p g·∫ßn nh·∫•t:</strong> ƒêang c·∫≠p nh·∫≠t</Typography>
                    </Paper>
                </CardContent>
            </Card>
        </Box>
    );
};

export default ProfilePage;
